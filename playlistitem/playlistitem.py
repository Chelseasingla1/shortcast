from flask import Blueprint, request, jsonifyimport loggingfrom models import db, PlaylistItemlogging.basicConfig(level=logging.INFO)logger = logging.getLogger(__name__)playlistitem = Blueprint("playlistitem", __name__)@playlistitem.post('/api/v1/playlistitems')def create_playlist_item():    data = request.json    podcast_id = data.get('podcast_id')    episode_id = data.get('episode_id')    try:        new_playlist_item = None        if podcast_id and episode_id:            raise ValueError('require only podcast id or episode id not both values')        if podcast_id:            new_playlist_item = PlaylistItem(podcast_id=podcast_id)        elif episode_id:            new_playlist_item = PlaylistItem(episode_id=episode_id)        db.session.add(new_playlist_item)        db.session.commit()        return jsonify({'status': 'success', 'message': 'PlaylistItem created', 'data': None}), 200    except Exception as e:        db.session.rollback()        logger.error(str(e))        return jsonify({'status': 'error', 'message': 'SERVER ERROR', 'data': None}), 500@playlistitem.delete('/api/v1/playlistitems/<int:playlist_item_id>')def delete_playlist_item(playlist_item_id):    try:        # TODO : find a way to consume ..        playlist_item_ = PlaylistItem.query.get(playlist_item_id)        if playlist_item_:            db.session.delete(playlist_item_)            db.session.commit()            return jsonify({'message': f'PlaylistItem {id} deleted successfully!'}), 200        else:            return jsonify({'message': 'PlaylistItem not found!'}), 404    except Exception as e:        db.session.rollback()        return jsonify({'message': str(e)})